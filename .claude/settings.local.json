{
  "permissions": {
    "allow": [
      "Bash(./agent-send.sh:*)",
      "Bash(./team-manager.sh:*)",
      "Bash(./setup.sh:*)",
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(find:*)",
      "Bash(tree:*)",
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(grep:*)",
      "Bash(wc:*)",
      "Bash(sort:*)",
      "Bash(uniq:*)",
      "Bash(echo:*)",
      "Bash(printf:*)",
      "Bash(if:*)",
      "Bash(then)",
      "Bash(else)",
      "Bash(elif)",
      "Bash(fi)",
      "Bash(for:*)",
      "Bash(while:*)",
      "Bash(do)",
      "Bash(done)",
      "Bash(case:*)",
      "Bash(esac)",
      "Bash(export:*)",
      "Bash(TEAM_NUM=*)",
      "Bash(ROLE_TEMPLATE=*)",
      "Bash(OUTPUT_DIR=*)",
      "Bash(TMP_DIR=*)",
      "Bash(LEADER_NAME=*)",
      "Bash(BOSS_NAME=*)",
      "Bash(WORKER_NAME=*)",
      "Bash(sleep:*)",
      "Bash(wait)",
      "Bash(jobs)",
      "Bash(ps:*)",
      "Bash(kill:*)",
      "Bash(killall:*)",
      "Bash(tmux:*)",
      "Bash(screen:*)",
      "Bash(tar:*)",
      "Bash(zip:*)",
      "Bash(unzip:*)",
      "Bash(gzip:*)",
      "Bash(gunzip:*)",
      "Bash(date:*)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(git:*)",
      "Bash(npm:*)",
      "Bash(yarn:*)",
      "Bash(pip:*)",
      "Bash(python:*)",
      "Bash(node:*)",
      "Bash(make:*)",
      "Bash(docker:*)",
      "Bash(sed:*)",
      "Bash(awk:*)",
      "Bash([ -f *_done.txt ]*)",
      "Bash([ -f ./tmp/*_done.txt ]*)",
      "Bash([ -f ./outputs/*/.publication_complete ]*)",
      "Bash([ -f ./outputs/*/.project_complete ]*)",
      "Bash([ -d ./outputs/* ]*)",
      "Bash(*_done.txt*)",
      "Bash(*_progress.log*)",
      "Bash(*_status.txt*)",
      "Bash(# 成果物ディレクトリの作成*)",
      "Bash(mkdir -p ./outputs/*/projects/*)",
      "Bash(mkdir -p ./outputs/*/docs/*)",
      "Bash(mkdir -p ./outputs/*/tests/*)",
      "Bash(mkdir -p ./tmp/team*)",
      "Bash(# 進捗管理タイマーの設定*)",
      "Bash(sleep * && {*}*)",
      "Bash(echo \"[$(date)]*\" >> *progress.log)",
      "Bash(echo \"[$(date)]*\" >> *status.log)",
      "Bash(echo \"=== * === \")",
      "Bash(# チーム*の状態確認*)",
      "Bash(# *成果物の確認*)",
      "Bash(ls -la */outputs/team*/)",
      "Bash(ls -la */outputs/*/projects/)",
      "Bash(ls -la */outputs/*/docs/)",
      "Bash(*outputs/team*/projects/* | grep -E *)",
      "Bash(*outputs/team*/docs/*.md | head *)",
      "Bash(tree */outputs/team* -L * 2>/dev/null || ls -la */outputs/team*/)",
      "Bash(* &)",
      "Bash(nohup *)",
      "Bash(* > *)",
      "Bash(* >> *)",
      "Bash(* 2> *)",
      "Bash(* 2>> *)",
      "Bash(* 2>/dev/null)",
      "Bash(* | *)",
      "Bash(# チーム検討情報蓄積場の作成\nTEAM_DIR=\"./team-workspace/team1\"\nmkdir -p $TEAM_DIR/{deliverables,dependencies,communications,decisions}\n\n# 成果物定義書のテンプレート作成\ncat > $TEAM_DIR/deliverables/definition-template.md << 'EOF'\n# 成果物定義書\n\n## 成果物基本情報\n- **成果物名**: [成果物の名前]\n- **担当者**: [担当ワーカー]\n- **種類**: [ファイル/システム/ドキュメント/その他]\n- **形式**: [HTML/PDF/実行ファイル/その他]\n- **保存場所**: [$OUTPUT_DIR/projects/[具体的パス]]\n\n## 成果物の詳細仕様\n- **目的**: [この成果物が解決する課題]\n- **機能要件**: [必要な機能の詳細]\n- **品質基準**: [品質の判断基準]\n- **完成基準**: [完了の判定条件]\n\n## 前提成果物（依存関係）\n- **必要な前提成果物1**: [成果物名] - [どの部分を使用するか]\n- **必要な前提成果物2**: [成果物名] - [どの部分を使用するか]\n\n## 影響を与える後続成果物\n- **影響する成果物1**: [成果物名] - [どの部分に影響するか]\n- **影響する成果物2**: [成果物名] - [どの部分に影響するか]\n\n## 変更時の影響範囲\n- **変更リスク**: [変更時に考慮すべきリスク]\n- **影響調査項目**: [変更時に確認すべき項目]\nEOF\n\n# 依存関係管理ファイルの作成\ncat > $TEAM_DIR/dependencies/dependency-matrix.md << 'EOF'\n# 成果物依存関係マトリクス\n\n## 依存関係一覧\n| 成果物名 | 前提成果物 | 影響する成果物 | 変更リスク |\n|----------|------------|----------------|------------|\n| [成果物A] | [前提1, 前提2] | [後続1, 後続2] | [リスクレベル] |\n\n## 変更影響チェーンマップ\n```\n[前提成果物] → [中間成果物] → [最終成果物]\n     ↓              ↓              ↓\n[影響調査]    [修正必要性]    [品質確認]\n```\nEOF\n\n# コミュニケーションログの初期化\ncat > $TEAM_DIR/communications/communication-log.md << 'EOF'\n# チーム内コミュニケーションログ\n\n## 質問・相談・情報共有\n[日時] [発信者] → [受信者]: [内容]\n\n## 重要な決定事項\n[日時] [決定者]: [決定内容] - [理由]\n\n## 課題・リスク報告\n[日時] [報告者]: [課題内容] - [対応方針]\nEOF\n\necho \"チーム検討情報蓄積場を作成しました: $TEAM_DIR\")",
      "Bash(# コミュニケーションガイドラインの作成\ncat > ./team-workspace/team1/communications/communication-guidelines.md << 'EOF'\n# ワーカー間コミュニケーションガイドライン\n\n## 許可されるコミュニケーション\n- 成果物に関する質問・相談\n- 技術的な情報共有\n- 依存関係の確認\n- 進捗状況の共有\n- 課題・リスクの相談\n\n## コミュニケーション方法\n1. 直接的な質問・相談\n2. 情報共有セッション\n3. 課題解決のための協力\n\n## 記録要件\n- 全てのコミュニケーションは communication-log.md に記録\n- 重要な決定事項は decisions/ フォルダに保存\n- 技術的な発見は knowledge-base.md に蓄積\n\n## マネージャー・リーダーへの報告\n- 重要な課題や決定事項は即座に報告\n- 定期的なコミュニケーション状況の共有\nEOF\n\n# 知識ベースの作成\ncat > ./team-workspace/team1/knowledge-base.md << 'EOF'\n# チーム知識ベース\n\n## 技術的発見・ノウハウ\n### [技術分野1]\n- 発見事項: [内容]\n- 活用方法: [具体的な使い方]\n- 注意点: [気をつけるべきこと]\n\n## 成功パターン・ベストプラクティス\n### [作業分野1]\n- 効果的なアプローチ: [方法]\n- 成功要因: [なぜうまくいったか]\n- 再現方法: [他でも使える方法]\n\n## 課題・失敗からの学び\n### [課題分野1]\n- 発生した課題: [問題の内容]\n- 原因分析: [なぜ起きたか]\n- 解決方法: [どう解決したか]\n- 予防策: [今後の対策]\n\n## 意思決定記録\n### [決定事項1]\n- 決定内容: [何を決めたか]\n- 決定理由: [なぜその選択をしたか]\n- 代替案: [他にどんな選択肢があったか]\n- 影響範囲: [この決定が影響する範囲]\nEOF\n\necho \"コミュニケーション環境を整備しました\")",
      "Bash(rm:*)",
      "Bash(# チーム検討情報蓄積場の再作成\nTEAM_DIR=\"./team-workspace/team1\"\nmkdir -p $TEAM_DIR/{deliverables,dependencies,communications,decisions}\n\n# 成果物定義書のテンプレート作成\ncat > $TEAM_DIR/deliverables/definition-template.md << 'EOF'\n# 成果物定義書\n\n## 成果物基本情報\n- **成果物名**: [成果物の名前]\n- **担当者**: [担当ワーカー]\n- **種類**: [ファイル/システム/ドキュメント/その他]\n- **形式**: [HTML/PDF/実行ファイル/その他]\n- **保存場所**: [$OUTPUT_DIR/projects/[具体的パス]]\n\n## 成果物の詳細仕様\n- **目的**: [この成果物が解決する課題]\n- **機能要件**: [必要な機能の詳細]\n- **品質基準**: [品質の判断基準]\n- **完成基準**: [完了の判定条件]\n\n## 前提成果物（依存関係）\n- **必要な前提成果物1**: [成果物名] - [どの部分を使用するか]\n- **必要な前提成果物2**: [成果物名] - [どの部分を使用するか]\n\n## 影響を与える後続成果物\n- **影響する成果物1**: [成果物名] - [どの部分に影響するか]\n- **影響する成果物2**: [成果物名] - [どの部分に影響するか]\n\n## 変更時の影響範囲\n- **変更リスク**: [変更時に考慮すべきリスク]\n- **影響調査項目**: [変更時に確認すべき項目]\nEOF\n\n# 依存関係管理ファイルの作成\ncat > $TEAM_DIR/dependencies/dependency-matrix.md << 'EOF'\n# 成果物依存関係マトリクス\n\n## 依存関係一覧\n| 成果物名 | 前提成果物 | 影響する成果物 | 変更リスク |\n|----------|------------|----------------|------------|\n| [成果物A] | [前提1, 前提2] | [後続1, 後続2] | [リスクレベル] |\n\n## 変更影響チェーンマップ\n```\n[前提成果物] → [中間成果物] → [最終成果物]\n     ↓              ↓              ↓\n[影響調査]    [修正必要性]    [品質確認]\n```\nEOF\n\n# コミュニケーションログの初期化\ncat > $TEAM_DIR/communications/communication-log.md << 'EOF'\n# チーム内コミュニケーションログ\n\n## 質問・相談・情報共有\n[日時] [発信者] → [受信者]: [内容]\n\n## 重要な決定事項\n[日時] [決定者]: [決定内容] - [理由]\n\n## 課題・リスク報告\n[日時] [報告者]: [課題内容] - [対応方針]\nEOF\n\n# コミュニケーションガイドラインの作成\ncat > $TEAM_DIR/communications/communication-guidelines.md << 'EOF'\n# ワーカー間コミュニケーションガイドライン\n\n## 許可されるコミュニケーション\n- 成果物に関する質問・相談\n- 技術的な情報共有\n- 依存関係の確認\n- 進捗状況の共有\n- 課題・リスクの相談\n\n## コミュニケーション方法\n1. 直接的な質問・相談\n2. 情報共有セッション\n3. 課題解決のための協力\n\n## 記録要件\n- 全てのコミュニケーションは communication-log.md に記録\n- 重要な決定事項は decisions/ フォルダに保存\n- 技術的な発見は knowledge-base.md に蓄積\n\n## マネージャー・リーダーへの報告\n- 重要な課題や決定事項は即座に報告\n- 定期的なコミュニケーション状況の共有\nEOF\n\n# 知識ベースの作成\ncat > $TEAM_DIR/knowledge-base.md << 'EOF'\n# チーム知識ベース\n\n## 技術的発見・ノウハウ\n### [技術分野1]\n- 発見事項: [内容]\n- 活用方法: [具体的な使い方]\n- 注意点: [気をつけるべきこと]\n\n## 成功パターン・ベストプラクティス\n### [作業分野1]\n- 効果的なアプローチ: [方法]\n- 成功要因: [なぜうまくいったか]\n- 再現方法: [他でも使える方法]\n\n## 課題・失敗からの学び\n### [課題分野1]\n- 発生した課題: [問題の内容]\n- 原因分析: [なぜ起きたか]\n- 解決方法: [どう解決したか]\n- 予防策: [今後の対策]\n\n## 意思決定記録\n### [決定事項1]\n- 決定内容: [何を決めたか]\n- 決定理由: [なぜその選択をしたか]\n- 代替案: [他にどんな選択肢があったか]\n- 影響範囲: [この決定が影響する範囲]\nEOF\n\necho \"チーム検討情報蓄積場を再作成しました: $TEAM_DIR\")"
    ],
    "deny": [
      "Bash(rm -rf /*)",
      "Bash(sudo:*)",
      "Bash(su:*)",
      "Bash(passwd:*)",
      "Bash(ssh:*)",
      "Bash(scp:*)",
      "Bash(rsync:*)",
      "Bash(systemctl:*)",
      "Bash(service:*)",
      "Bash(mount:*)",
      "Bash(umount:*)",
      "Bash(fdisk:*)",
      "Bash(mkfs:*)",
      "Bash(nc:*)",
      "Bash(netcat:*)",
      "Bash(telnet:*)",
      "Bash(ftp:*)",
      "Bash(sftp:*)",
      "Bash(rm -rf ./outputs)",
      "Bash(rm -rf ./instructions)",
      "Bash(rm -rf ./tmp)",
      "Bash(rm -rf ~/*)",
      "Bash(vi:*)",
      "Bash(vim:*)",
      "Bash(nano:*)",
      "Bash(emacs:*)",
      "Bash(apt:*)",
      "Bash(yum:*)",
      "Bash(brew:*)",
      "Bash(iptables:*)",
      "Bash(ufw:*)",
      "Bash(firewall-cmd:*)"
    ]
  },
  "workingDirectory": "/Users/carlos/develop/ai/company",
  "environment": {
    "AGENT_SYSTEM_MODE": "integrated",
    "DEFAULT_OUTPUT_DIR": "./outputs/default",
    "DEFAULT_TMP_DIR": "./tmp",
    "DEFAULT_INSTRUCTIONS_DIR": "./instructions",
    "TMUX_SESSION_PREFIX": "claude-agent",
    "MAX_TEAMS": "10",
    "PROGRESS_CHECK_INTERVAL": "1500",
    "AUTO_CLEANUP": "false",
    "LOG_LEVEL": "INFO"
  },
  "aliases": {
    "setup-default": "./setup.sh",
    "setup-legacy": "./setup.sh",
    "setup-role": "./setup.sh",
    "send": "./agent-send.sh",
    "team": "./team-manager.sh",
    "status": "./team-manager.sh status",
    "list-teams": "./team-manager.sh list",
    "cleanup": "./team-manager.sh clean"
  },
  "autoComplete": {
    "commands": [
      "./setup.sh",
      "./agent-send.sh",
      "./team-manager.sh"
    ],
    "roles": [
      "default",
      "publishing",
      "design",
      "game-dev",
      "game-planning",
      "marketing",
      "research"
    ],
    "agents": [
      "president",
      "boss1",
      "worker1",
      "worker2",
      "worker3"
    ]
  },
  "monitoring": {
    "enableProgressTracking": true,
    "enableTeamStatusMonitoring": true,
    "enableOutputDirectoryWatching": true,
    "progressCheckInterval": 1500,
    "maxLogFileSize": "10MB",
    "logRotationCount": 5
  },
  "security": {
    "restrictFileAccess": true,
    "allowedDirectories": [
      "./outputs",
      "./tmp",
      "./instructions",
      "./team-roles",
      "./.claude"
    ],
    "blockedDirectories": [
      "/",
      "/usr",
      "/etc",
      "/var",
      "/sys",
      "/proc",
      "~/.ssh",
      "~/.aws"
    ],
    "maxFileSize": "100MB",
    "maxDirectoryDepth": 10
  },
  "performance": {
    "enableParallelExecution": true,
    "maxConcurrentCommands": 5,
    "commandTimeout": 300,
    "backgroundJobTimeout": 3600
  }
}